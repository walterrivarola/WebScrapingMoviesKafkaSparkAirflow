[2024-07-01 22:04:06,935] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:04:06,941] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:04:06,941] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:04:06,941] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:04:06,941] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:04:06,941] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:04:06,941] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:04:06,941] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:09:06,941] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:09:06,941] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:09:06,942] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:09:06,942] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:09:06,942] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:09:06,942] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:09:06,942] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:09:06,942] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:14:06,942] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:14:06,943] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:14:06,943] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:14:06,943] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:14:06,943] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:14:06,943] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:14:06,943] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:14:06,943] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:19:06,943] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:19:06,943] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:19:06,944] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:19:06,944] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:19:06,944] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:19:06,944] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:19:06,944] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:19:06,944] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:24:06,944] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:24:06,944] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:24:06,944] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:24:06,945] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:24:06,945] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:24:06,945] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:24:06,945] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:24:06,945] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:29:06,946] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:29:06,946] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:29:06,946] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:29:06,946] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:29:06,946] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:29:06,946] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:29:06,946] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:29:06,946] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:34:06,947] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:34:06,947] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:34:06,947] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:34:06,948] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:34:06,948] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:34:06,948] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:34:06,948] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:34:06,948] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:39:06,948] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:39:06,948] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:39:06,949] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:39:06,949] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:39:06,949] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:39:06,949] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:39:06,949] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:39:06,949] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:44:06,949] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:44:06,949] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:44:06,950] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:44:06,950] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:44:06,950] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:44:06,950] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:44:06,950] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:44:06,950] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:49:06,958] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:49:06,966] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:49:06,966] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:49:06,966] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:49:06,966] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:49:06,966] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:49:06,966] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:49:06,966] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:54:06,968] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:54:06,970] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:54:06,970] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-07-01 22:54:06,970] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.08333333333333333 (kafka.controller.KafkaController)
[2024-07-01 22:54:06,970] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:54:06,970] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:54:06,970] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:54:06,970] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.045454545454545456 (kafka.controller.KafkaController)
[2024-07-01 22:55:08,276] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-01 22:55:08,277] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-01 22:55:08,278] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,278] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,303] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 22:55:08,303] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 22:55:08,303] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 22:55:08,500] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:55:08,500] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,501] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,588] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:55:08,588] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,588] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,601] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:55:08,601] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,601] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,740] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 22:55:08,743] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 22:55:08,744] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 22:56:04,192] DEBUG [Controller id=2] Delete topics listener fired for topics movie-recommendation to be deleted (kafka.controller.KafkaController)
[2024-07-01 22:56:04,192] INFO [Controller id=2] Starting topic deletion for topics movie-recommendation (kafka.controller.KafkaController)
[2024-07-01 22:56:04,192] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-recommendation (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,192] INFO [Topic Deletion Manager 2] Deletion of topic movie-recommendation (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,471] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-recommendation-2 -> NONE, movie-recommendation-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:56:04,477] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-recommendation,Partition=2,Replica=1],[Topic=movie-recommendation,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,477] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-recommendation (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,585] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-recommendation-2 -> NONE, movie-recommendation-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:56:04,585] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-recommendation,Partition=2,Replica=2],[Topic=movie-recommendation,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,585] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-recommendation (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,654] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-recommendation-0 -> NONE, movie-recommendation-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:56:04,655] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-recommendation,Partition=0,Replica=3],[Topic=movie-recommendation,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,655] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-recommendation (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,760] INFO [Topic Deletion Manager 2] Deletion of topic movie-recommendation successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:04,762] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 22:56:04,764] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 22:56:17,448] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(_AZfpXWwSCmT2ixnuDM6aA),Map(movie-urls-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-01 22:56:17,449] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-01 22:56:40,323] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-01 22:56:40,323] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-01 22:56:40,323] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,324] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,455] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:56:40,456] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,456] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,458] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:56:40,458] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,458] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,461] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 22:56:40,461] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,461] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,536] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 22:56:40,538] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 22:56:40,540] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 22:56:54,601] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(0eSucGk1RPKeKQ9V1SyIeQ),Map(movie-details-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-01 22:56:54,601] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-01 22:59:06,971] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 22:59:06,972] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 22:59:06,972] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 22:59:06,972] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 22:59:06,972] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:59:06,972] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 22:59:06,972] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 22:59:06,972] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
