[2024-07-01 23:04:06,974] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:04:07,006] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:04:07,007] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:04:07,007] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:04:07,007] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:04:07,007] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:04:07,007] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:04:07,007] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:09:07,008] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:09:07,009] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:09:07,009] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:09:07,009] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:09:07,009] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:09:07,010] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:09:07,010] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:09:07,010] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:14:07,011] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:14:07,011] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:14:07,012] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:14:07,012] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:14:07,012] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:14:07,012] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:14:07,012] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:14:07,012] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:19:07,013] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:19:07,013] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:19:07,013] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:19:07,013] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:19:07,013] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:19:07,013] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:19:07,013] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:19:07,013] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:24:07,014] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:24:07,015] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:24:07,015] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:24:07,015] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:24:07,015] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:24:07,015] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:24:07,015] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:24:07,015] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:27:18,630] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:27:18,630] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-01 23:27:18,633] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:18,633] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:18,716] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 23:27:18,716] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 23:27:18,717] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 23:27:18,886] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:27:18,886] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:18,887] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:18,920] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:27:18,920] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:18,921] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:18,945] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:27:18,945] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:18,945] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:19,008] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:19,010] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 23:27:19,012] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:27:27,718] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(89COJskrS-evIFqkUvKbwQ),Map(movie-urls-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-01 23:27:27,718] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-01 23:27:45,432] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:27:45,432] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-01 23:27:45,432] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,432] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,575] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:27:45,575] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,576] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,578] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:27:45,578] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,579] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,579] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:27:45,579] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,579] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,717] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 23:27:45,728] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 23:27:45,729] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:27:52,494] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(Biih6nA8QayosUOC4flKTw),Map(movie-details-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-01 23:27:52,494] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-01 23:29:07,016] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:29:07,016] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:29:07,016] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:29:07,016] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:29:07,016] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:29:07,016] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:29:07,016] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:29:07,016] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:34:07,018] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:34:07,019] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:34:07,021] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:34:07,021] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:34:07,021] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:34:07,021] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:34:07,021] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:34:07,021] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:39:07,022] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:39:07,023] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:39:07,023] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:39:07,023] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:39:07,023] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:39:07,023] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:39:07,023] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:39:07,023] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:44:07,024] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:44:07,027] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:44:07,033] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:44:07,033] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:44:07,037] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:44:07,037] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:44:07,038] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:44:07,038] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:47:19,711] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:47:19,712] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-01 23:47:19,712] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:19,712] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:19,718] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 23:47:19,718] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 23:47:19,719] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-01 23:47:19,851] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:47:19,851] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:19,852] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:19,903] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:47:19,903] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:19,904] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:19,906] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:47:19,907] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:19,907] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:20,011] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:20,013] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 23:47:20,015] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:47:25,014] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(8cCBwC9IQPmR5zEJeVFRbw),Map(movie-urls-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-01 23:47:25,015] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-01 23:47:45,625] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:47:45,625] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-01 23:47:45,625] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,625] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,753] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:47:45,753] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,755] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,755] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:47:45,755] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,756] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,779] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:47:45,779] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,781] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,847] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 23:47:45,849] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 23:47:45,851] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:47:50,775] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(GS3hqxbVTX6s4wEaWGDq_g),Map(movie-details-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-01 23:47:50,775] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-01 23:49:07,039] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:49:07,039] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:49:07,040] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:49:07,040] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:49:07,040] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:49:07,040] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:49:07,040] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:49:07,040] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:54:07,041] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:54:07,041] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:54:07,042] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:54:07,042] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:54:07,042] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:54:07,042] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:54:07,042] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:54:07,042] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:55:12,414] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:55:12,414] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-01 23:55:12,415] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:12,415] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:12,547] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:55:12,547] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:12,550] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:12,555] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:55:12,555] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:12,555] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:12,597] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:55:12,597] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:12,598] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:13,097] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:13,110] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 23:55:13,116] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:55:31,113] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(VFNebmn7RcGVEJyNwwuWvQ),Map(movie-urls-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-01 23:55:31,113] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-01 23:55:59,139] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:55:59,140] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-01 23:55:59,140] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,140] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,299] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:55:59,300] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,300] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,310] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:55:59,310] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,311] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,333] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-01 23:55:59,334] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,334] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,457] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-01 23:55:59,461] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-01 23:55:59,468] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-01 23:56:06,522] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(WAHz9GokTZet4hz2iypTUg),Map(movie-details-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-01 23:56:06,522] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-01 23:59:07,045] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-01 23:59:07,045] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-01 23:59:07,045] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-01 23:59:07,045] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-01 23:59:07,045] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:59:07,045] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-01 23:59:07,045] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-01 23:59:07,045] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
