[2024-06-27 22:23:38,296] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2024-06-27 22:23:40,467] INFO [Controller id=2 epoch=8] Sending LeaderAndIsr request to broker 2 with 20 become-leader and 3 become-follower partitions (state.change.logger)
[2024-06-27 22:23:40,508] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 23 partitions (state.change.logger)
[2024-06-27 22:23:40,620] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 23 partitions (state.change.logger)
[2024-06-27 22:23:40,721] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition kafka-integration-spark-2 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition airflow-kafka-spark-1 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition airflow-kafka-spark-2 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition movie-recommendation-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition movie-recommendation-0 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition kafka-spark-0 since its associated leader epoch 9 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-16 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-13 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-46 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-43 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-10 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-22 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-19 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-49 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-31 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-28 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-25 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-7 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-40 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-37 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-4 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-1 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,727] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-34 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2024-06-27 22:23:40,920] INFO [Broker id=2] Finished LeaderAndIsr request in 330ms correlationId 1 from controller 2 for 23 partitions (state.change.logger)
[2024-06-27 22:23:40,980] INFO [Broker id=2] Add 23 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 2 (state.change.logger)
[2024-06-27 22:23:41,490] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,491] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,492] INFO [Controller id=2 epoch=8] Partition airflow-kafka-spark-1 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:15,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,494] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition movie-recommendation-1 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition meteoblue_topic-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition movie-recommendation-2 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition kafka-integration-spark-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition airflow-kafka-spark-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:14,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,495] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition kafka-spark-2 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,496] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,635] INFO [Controller id=2 epoch=8] Partition movie-recommendation-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,637] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,637] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,637] INFO [Controller id=2 epoch=8] Partition movie-recommendation-1 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,637] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,637] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,637] INFO [Controller id=2 epoch=8] Partition kafka-spark-1 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,639] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,639] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,639] INFO [Controller id=2 epoch=8] Partition kafka-integration-spark-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition airflow-kafka-spark-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:14,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,641] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,642] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,642] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,642] INFO [Controller id=2 epoch=8] Partition airflow-kafka-spark-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:15,ControllerEpoch:8) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-06-27 22:23:41,644] INFO [Controller id=2 epoch=8] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 3 become-follower partitions (state.change.logger)
[2024-06-27 22:23:41,649] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 for 4 partitions (state.change.logger)
[2024-06-27 22:23:41,649] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 44 partitions (state.change.logger)
[2024-06-27 22:23:41,697] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 2 epoch 8 as part of the become-leader transition for 1 partitions (state.change.logger)
[2024-06-27 22:23:41,724] INFO [Broker id=2] Leader movie-recommendation-2 with topic id Some(uL5iY_15SduwCdL7FTENpg) starts at leader epoch 1 from offset 11 with partition epoch 1, high watermark 11, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-06-27 22:23:41,848] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 3 from controller 2 epoch 8 for partition airflow-kafka-spark-1 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-06-27 22:23:41,848] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 3 from controller 2 epoch 8 for partition airflow-kafka-spark-2 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-06-27 22:23:41,848] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 3 from controller 2 epoch 8 for partition movie-recommendation-0 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-06-27 22:23:41,848] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 8 with correlation id 3 for 0 partitions (state.change.logger)
[2024-06-27 22:23:41,854] INFO [Broker id=2] Finished LeaderAndIsr request in 205ms correlationId 3 from controller 2 for 4 partitions (state.change.logger)
[2024-06-27 22:23:41,868] INFO [Broker id=2] Add 44 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 4 (state.change.logger)
[2024-06-27 22:23:42,210] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,214] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,215] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,228] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition movie-recommendation-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition movie-recommendation-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,234] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition meteoblue_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition meteoblue_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,235] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,241] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,242] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,243] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,243] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition kafka-integration-spark-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition kafka-integration-spark-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,243] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,250] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,250] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,250] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,250] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,250] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,252] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,252] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,252] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,253] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,253] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,253] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,253] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,253] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition kafka-spark-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition kafka-spark-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,253] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,253] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,259] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition kafka-integration-spark-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition kafka-integration-spark-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition kafka-spark-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition kafka-spark-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,260] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,261] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,261] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,262] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,262] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition airflow-kafka-spark-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition airflow-kafka-spark-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:42,266] INFO [Controller id=2 epoch=8] Changed partition movie-recommendation-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-06-27 22:23:42,266] INFO [Controller id=2 epoch=8] Changed partition airflow-kafka-spark-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=16) (state.change.logger)
[2024-06-27 22:23:42,266] INFO [Controller id=2 epoch=8] Changed partition airflow-kafka-spark-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2024-06-27 22:23:42,266] INFO [Controller id=2 epoch=8] Sending LeaderAndIsr request to broker 2 with 3 become-leader and 0 become-follower partitions (state.change.logger)
[2024-06-27 22:23:42,267] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 3 partitions (state.change.logger)
[2024-06-27 22:23:42,268] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 for 3 partitions (state.change.logger)
[2024-06-27 22:23:42,337] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 2 epoch 8 as part of the become-leader transition for 3 partitions (state.change.logger)
[2024-06-27 22:23:42,375] INFO [Broker id=2] Leader airflow-kafka-spark-1 with topic id Some(6R4bv3JgRUe-KaLl8bFPsQ) starts at leader epoch 11 from offset 610 with partition epoch 16, high watermark 610, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 9. (state.change.logger)
[2024-06-27 22:23:42,420] INFO [Broker id=2] Leader airflow-kafka-spark-2 with topic id Some(6R4bv3JgRUe-KaLl8bFPsQ) starts at leader epoch 11 from offset 522 with partition epoch 15, high watermark 522, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 9. (state.change.logger)
[2024-06-27 22:23:42,483] INFO [Broker id=2] Leader movie-recommendation-0 with topic id Some(uL5iY_15SduwCdL7FTENpg) starts at leader epoch 2 from offset 27 with partition epoch 2, high watermark 27, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-06-27 22:23:42,723] INFO [Broker id=2] Finished LeaderAndIsr request in 455ms correlationId 5 from controller 2 for 3 partitions (state.change.logger)
[2024-06-27 22:23:42,744] INFO [Broker id=2] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 6 (state.change.logger)
[2024-06-27 22:23:42,874] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2024-06-27 22:23:42,882] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(1, 3) for 63 partitions (state.change.logger)
[2024-06-27 22:23:42,916] INFO [Controller id=2 epoch=8] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 24 become-follower partitions (state.change.logger)
[2024-06-27 22:23:42,917] INFO [Controller id=2 epoch=8] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 22 become-follower partitions (state.change.logger)
[2024-06-27 22:23:42,918] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 44 partitions (state.change.logger)
[2024-06-27 22:23:42,932] INFO [Broker id=2] Add 44 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 8 (state.change.logger)
[2024-06-27 22:23:43,414] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition movie-recommendation-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition meteoblue_topic-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,421] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition kafka-integration-spark-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition kafka-spark-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition kafka-integration-spark-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition kafka-spark-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2024-06-27 22:23:43,422] INFO [Controller id=2 epoch=8] Changed partition airflow-kafka-spark-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=12, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=16) (state.change.logger)
[2024-06-27 22:23:43,429] INFO [Controller id=2 epoch=8] Sending LeaderAndIsr request to broker 1 with 20 become-leader and 2 become-follower partitions (state.change.logger)
[2024-06-27 22:23:43,431] INFO [Controller id=2 epoch=8] Sending LeaderAndIsr request to broker 3 with 20 become-leader and 0 become-follower partitions (state.change.logger)
[2024-06-27 22:23:43,431] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 40 partitions (state.change.logger)
[2024-06-27 22:23:43,441] INFO [Broker id=2] Add 40 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 9 (state.change.logger)
[2024-06-27 22:23:44,929] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2024-06-27 22:23:44,955] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 10 (state.change.logger)
[2024-06-27 22:23:45,214] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 3 partitions (state.change.logger)
[2024-06-27 22:23:45,217] INFO [Broker id=2] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 11 (state.change.logger)
[2024-06-27 22:23:47,359] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2024-06-27 22:23:47,364] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 12 (state.change.logger)
[2024-06-27 22:23:47,438] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2024-06-27 22:23:47,442] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 13 (state.change.logger)
