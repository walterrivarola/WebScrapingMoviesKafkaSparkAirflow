[2024-07-02 00:00:23,566] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-02 00:00:23,566] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-02 00:00:23,566] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,566] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,819] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 00:00:23,820] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,829] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,831] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 00:00:23,831] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,831] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,847] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 00:00:23,848] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,848] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,985] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:23,988] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 00:00:23,990] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 00:00:30,224] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(d8uLVJyIRsqBz0GDfe6dyw),Map(movie-details-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 00:00:30,224] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-02 00:00:51,284] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-02 00:00:51,284] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-02 00:00:51,284] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,284] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,448] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 00:00:51,449] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,449] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,451] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 00:00:51,451] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,451] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,460] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 00:00:51,461] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,461] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,521] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 00:00:51,524] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 00:00:51,527] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 00:01:01,658] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(XnacW-CTQbOzjLQl2phGlA),Map(movie-urls-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 00:01:01,658] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-02 00:04:07,054] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 00:04:07,054] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 00:04:07,057] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 00:04:07,058] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 00:04:07,058] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:04:07,058] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:04:07,058] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:04:07,058] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:09:07,061] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 00:09:07,079] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 00:09:07,096] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 00:09:07,096] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 00:09:07,096] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:09:07,096] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:09:07,096] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:09:07,096] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:14:07,097] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 00:14:07,097] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 00:14:07,106] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 00:14:07,106] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 00:14:07,106] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:14:07,106] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:14:07,106] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:14:07,107] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:19:07,109] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 00:19:07,109] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 00:19:07,114] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 00:19:07,114] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 00:19:07,114] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:19:07,114] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:19:07,115] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:19:07,115] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:24:07,116] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 00:24:07,116] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 00:24:07,116] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 00:24:07,116] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 00:24:07,116] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:24:07,116] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 00:24:07,116] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 00:24:07,116] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
