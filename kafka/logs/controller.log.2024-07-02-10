[2024-07-02 10:00:12,739] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:00:12,740] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:00:12,740] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:00:12,740] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:00:12,740] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:00:12,740] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:00:12,740] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:00:12,740] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:05:12,744] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:05:12,744] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:05:12,744] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:05:12,744] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:05:12,744] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:05:12,744] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:05:12,744] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:05:12,744] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:10:12,744] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:10:12,744] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:10:12,747] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:10:12,747] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:10:12,747] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:10:12,747] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:10:12,747] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:10:12,747] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:10:44,702] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-02 10:10:44,702] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-02 10:10:44,703] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,703] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,710] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 10:10:44,711] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 10:10:44,711] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 10:10:44,822] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:10:44,822] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,822] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,826] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:10:44,826] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,826] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,828] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:10:44,828] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,828] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,883] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 10:10:44,897] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 10:10:44,899] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 10:10:50,357] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(2uIyI42jT9a-gN8DMii3jA),Map(movie-details-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 10:10:50,357] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-02 10:11:14,664] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-02 10:11:14,664] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-02 10:11:14,665] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,665] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,762] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:11:14,762] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,762] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,762] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:11:14,762] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,762] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,763] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:11:14,763] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,763] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,832] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 10:11:14,845] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 10:11:14,850] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 10:11:23,343] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(rsg2m5CkSsS-KSt_a8hMnQ),Map(movie-urls-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 10:11:23,343] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-02 10:15:12,748] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:15:12,748] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:15:12,748] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:15:12,748] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:15:12,748] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:15:12,748] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:15:12,748] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:15:12,748] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:19:05,646] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-02 10:19:05,647] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-02 10:19:05,647] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,647] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,811] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:19:05,812] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,813] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,818] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:19:05,818] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,818] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,835] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:19:05,835] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,836] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,989] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:05,992] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 10:19:06,010] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 10:19:12,307] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(QXBnSAhhRVuHnDLQUE4uUQ),Map(movie-details-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 10:19:12,314] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-02 10:19:41,325] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-02 10:19:41,326] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-02 10:19:41,326] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,326] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,448] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:19:41,449] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,449] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,467] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:19:41,467] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,468] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,469] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 10:19:41,469] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,470] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,584] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 10:19:41,591] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 10:19:41,592] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 10:19:47,862] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(EiX4oZVMQNGEiUBl0mRYSg),Map(movie-urls-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 10:19:47,862] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-02 10:20:12,749] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:20:12,749] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:20:12,749] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:20:12,749] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:20:12,750] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:20:12,750] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:20:12,750] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:20:12,750] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:25:12,750] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:25:12,751] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:25:12,753] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:25:12,753] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:25:12,753] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:25:12,753] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:25:12,753] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:25:12,753] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:30:12,757] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:30:12,757] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:30:12,757] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:30:12,757] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:30:12,757] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:30:12,757] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:30:12,757] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:30:12,757] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:35:12,760] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:35:12,761] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:35:12,761] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:35:12,761] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:35:12,761] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:35:12,761] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:35:12,761] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:35:12,761] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:40:12,767] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:40:12,770] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:40:12,770] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:40:12,770] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:40:12,770] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:40:12,771] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:40:12,771] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:40:12,771] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:45:12,777] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:45:12,783] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:45:12,783] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:45:12,783] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:45:12,783] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:45:12,783] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:45:12,783] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:45:12,783] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:50:12,785] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:50:12,787] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:50:12,789] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:50:12,789] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:50:12,789] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:50:12,790] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:50:12,790] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:50:12,790] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:55:12,791] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 10:55:12,795] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 10:55:12,795] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 10:55:12,795] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 10:55:12,795] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:55:12,795] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 10:55:12,795] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 10:55:12,795] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
