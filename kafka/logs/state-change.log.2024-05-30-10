[2024-05-30 10:23:06,695] INFO [Broker id=2] Add 60 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2024-05-30 10:23:06,986] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 21 partitions (state.change.logger)
[2024-05-30 10:23:07,417] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-37 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,505] INFO [Broker id=2] Follower airflow-kafka-spark-2 starts at leader epoch 1 from offset 105 with partition epoch 1 and high watermark 105. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-05-30 10:23:07,506] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-7 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,506] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-22 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,509] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition kafka-spark-0 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,509] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-10 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-31 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-46 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-1 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-16 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-19 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] INFO [Broker id=2] Follower airflow-kafka-spark-1 starts at leader epoch 1 from offset 149 with partition epoch 1 and high watermark 149. Current leader is 1. Previous leader Some(1) and previous leader epoch was 1. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-34 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition kafka-integration-spark-2 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-4 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-25 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,512] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-40 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,518] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-43 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,518] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-13 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,518] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-28 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:07,518] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-49 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:23:08,532] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 2 partitions (state.change.logger)
[2024-05-30 10:23:11,234] INFO [Broker id=2] Finished LeaderAndIsr request in 4254ms correlationId 1 from controller 1 for 21 partitions (state.change.logger)
[2024-05-30 10:23:11,426] INFO [Broker id=2] Add 21 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2024-05-30 10:23:11,430] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 19 partitions (state.change.logger)
[2024-05-30 10:23:11,641] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 19 partitions (state.change.logger)
[2024-05-30 10:23:11,716] INFO [Broker id=2] Leader __consumer_offsets-37 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:11,986] INFO [Broker id=2] Leader __consumer_offsets-7 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,095] INFO [Broker id=2] Leader __consumer_offsets-22 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,223] INFO [Broker id=2] Leader kafka-spark-0 with topic id Some(237UcznbR8uiJ16DjNj_Iw) starts at leader epoch 5 from offset 0 with partition epoch 5, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 3. (state.change.logger)
[2024-05-30 10:23:12,406] INFO [Broker id=2] Leader __consumer_offsets-10 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 1 with partition epoch 2, high watermark 1, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,480] INFO [Broker id=2] Leader __consumer_offsets-31 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,579] INFO [Broker id=2] Leader __consumer_offsets-46 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,621] INFO [Broker id=2] Leader __consumer_offsets-1 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,691] INFO [Broker id=2] Leader __consumer_offsets-16 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,722] INFO [Broker id=2] Leader __consumer_offsets-19 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,802] INFO [Broker id=2] Leader __consumer_offsets-34 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:12,911] INFO [Broker id=2] Leader kafka-integration-spark-2 with topic id Some(ZYNTTkPlS0ycvHVcVV7iRA) starts at leader epoch 5 from offset 0 with partition epoch 5, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 3. (state.change.logger)
[2024-05-30 10:23:13,037] INFO [Broker id=2] Leader __consumer_offsets-4 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:13,085] INFO [Broker id=2] Leader __consumer_offsets-25 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:13,155] INFO [Broker id=2] Leader __consumer_offsets-40 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:13,244] INFO [Broker id=2] Leader __consumer_offsets-43 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:13,328] INFO [Broker id=2] Leader __consumer_offsets-13 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:13,391] INFO [Broker id=2] Leader __consumer_offsets-28 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:13,598] INFO [Broker id=2] Leader __consumer_offsets-49 with topic id Some(oQ4WDIiQQF6RLo01hvSo5g) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-05-30 10:23:13,681] INFO [Broker id=2] Finished LeaderAndIsr request in 2251ms correlationId 3 from controller 1 for 19 partitions (state.change.logger)
[2024-05-30 10:23:13,688] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2024-05-30 10:23:15,279] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2024-05-30 10:23:17,982] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2024-05-30 10:45:53,909] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2024-05-30 10:45:57,123] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 2 with 19 become-leader and 2 become-follower partitions (state.change.logger)
[2024-05-30 10:45:57,271] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 21 partitions (state.change.logger)
[2024-05-30 10:45:57,349] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 21 partitions (state.change.logger)
[2024-05-30 10:45:57,428] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition kafka-integration-spark-2 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,429] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition airflow-kafka-spark-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,430] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition airflow-kafka-spark-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition kafka-spark-0 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-16 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-13 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-46 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-43 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-10 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-22 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-19 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-49 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-31 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-28 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-25 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-7 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-40 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-37 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,431] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-34 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-05-30 10:45:57,456] INFO [Broker id=2] Finished LeaderAndIsr request in 107ms correlationId 1 from controller 2 for 21 partitions (state.change.logger)
[2024-05-30 10:45:57,687] INFO [Broker id=2] Add 21 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 2 (state.change.logger)
[2024-05-30 10:45:59,797] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,829] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,833] INFO [Controller id=2 epoch=3] Partition airflow-kafka-spark-1 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,833] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition meteoblue_topic-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition kafka-integration-spark-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition airflow-kafka-spark-0 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,834] INFO [Controller id=2 epoch=3] Partition kafka-spark-2 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,835] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,887] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:45:59,887] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,698] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition kafka-spark-1 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition kafka-integration-spark-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition airflow-kafka-spark-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,699] INFO [Controller id=2 epoch=3] Partition airflow-kafka-spark-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-05-30 10:46:00,717] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 2 become-follower partitions (state.change.logger)
[2024-05-30 10:46:00,717] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 41 partitions (state.change.logger)
[2024-05-30 10:46:00,726] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 for 2 partitions (state.change.logger)
[2024-05-30 10:46:00,727] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 3 from controller 2 epoch 3 for partition airflow-kafka-spark-1 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:46:00,727] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 3 from controller 2 epoch 3 for partition airflow-kafka-spark-2 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2024-05-30 10:46:00,727] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 3 with correlation id 3 for 0 partitions (state.change.logger)
[2024-05-30 10:46:00,727] INFO [Broker id=2] Finished LeaderAndIsr request in 1ms correlationId 3 from controller 2 for 2 partitions (state.change.logger)
[2024-05-30 10:46:00,739] INFO [Broker id=2] Add 41 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 4 (state.change.logger)
[2024-05-30 10:46:03,377] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,392] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,392] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,393] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition meteoblue_topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition meteoblue_topic-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,393] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,393] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,393] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,413] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,417] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition kafka-integration-spark-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition kafka-integration-spark-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,418] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,423] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,424] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,424] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,424] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,424] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,426] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,426] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,427] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,427] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,427] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,427] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,427] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,427] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition kafka-spark-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition kafka-spark-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,427] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,428] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,428] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,428] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,428] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition kafka-integration-spark-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition kafka-integration-spark-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,428] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition kafka-spark-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition kafka-spark-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,429] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,429] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,430] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,430] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,430] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,430] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,431] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,431] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,431] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,431] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition airflow-kafka-spark-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition airflow-kafka-spark-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2586)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-05-30 10:46:03,462] INFO [Controller id=2 epoch=3] Changed partition airflow-kafka-spark-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2024-05-30 10:46:03,462] INFO [Controller id=2 epoch=3] Changed partition airflow-kafka-spark-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2024-05-30 10:46:03,462] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 2 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2024-05-30 10:46:03,463] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 2 partitions (state.change.logger)
[2024-05-30 10:46:03,466] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 for 2 partitions (state.change.logger)
[2024-05-30 10:46:03,568] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 2 epoch 3 as part of the become-leader transition for 2 partitions (state.change.logger)
[2024-05-30 10:46:03,612] INFO [Broker id=2] Leader airflow-kafka-spark-1 with topic id Some(6R4bv3JgRUe-KaLl8bFPsQ) starts at leader epoch 3 from offset 151 with partition epoch 4, high watermark 151, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 1. (state.change.logger)
[2024-05-30 10:46:03,837] INFO [Broker id=2] Leader airflow-kafka-spark-2 with topic id Some(6R4bv3JgRUe-KaLl8bFPsQ) starts at leader epoch 3 from offset 108 with partition epoch 4, high watermark 108, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-05-30 10:46:04,343] INFO [Broker id=2] Finished LeaderAndIsr request in 877ms correlationId 5 from controller 2 for 2 partitions (state.change.logger)
[2024-05-30 10:46:04,361] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 6 (state.change.logger)
[2024-05-30 10:46:05,200] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2024-05-30 10:46:05,214] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 3) for 60 partitions (state.change.logger)
[2024-05-30 10:46:05,441] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 22 become-follower partitions (state.change.logger)
[2024-05-30 10:46:05,442] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 20 become-follower partitions (state.change.logger)
[2024-05-30 10:46:05,443] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 41 partitions (state.change.logger)
[2024-05-30 10:46:05,447] INFO [Broker id=2] Add 41 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 8 (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition meteoblue_topic-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition kafka-integration-spark-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition kafka-spark-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition kafka-integration-spark-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition kafka-spark-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Changed partition airflow-kafka-spark-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2024-05-30 10:46:07,126] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 1 with 20 become-leader and 1 become-follower partitions (state.change.logger)
[2024-05-30 10:46:07,129] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 3 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2024-05-30 10:46:07,132] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 39 partitions (state.change.logger)
[2024-05-30 10:46:07,153] INFO [Broker id=2] Add 39 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 9 (state.change.logger)
[2024-05-30 10:46:10,413] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 2 partitions (state.change.logger)
[2024-05-30 10:46:10,421] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 10 (state.change.logger)
[2024-05-30 10:46:11,163] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2024-05-30 10:46:11,184] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 11 (state.change.logger)
