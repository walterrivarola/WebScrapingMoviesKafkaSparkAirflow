[2024-06-27 22:22:35,865] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2024-06-27 22:22:36,197] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-06-27 22:22:36,590] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-06-27 22:22:37,083] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-06-27 22:22:38,365] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2024-06-27 22:23:11,666] ERROR [Controller id=2] Error processing event RegisterBrokerAndReelect (kafka.controller.KafkaController)
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:134)
	at kafka.zk.KafkaZkClient$CheckedEphemeral.create(KafkaZkClient.scala:2130)
	at kafka.zk.KafkaZkClient.checkedEphemeralCreate(KafkaZkClient.scala:2094)
	at kafka.zk.KafkaZkClient.registerBroker(KafkaZkClient.scala:106)
	at kafka.controller.KafkaController.processRegisterBrokerAndReelect(KafkaController.scala:2585)
	at kafka.controller.KafkaController.process(KafkaController.scala:2628)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-06-27 22:23:11,825] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2024-06-27 22:23:11,932] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-06-27 22:23:11,933] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-06-27 22:23:11,933] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-06-27 22:23:11,990] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2024-06-27 22:23:18,084] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2024-06-27 22:23:18,239] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2024-06-27 22:23:27,280] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-06-27 22:23:28,162] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-06-27 22:23:28,451] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2024-06-27 22:23:30,608] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 785) (kafka.controller.KafkaController)
[2024-06-27 22:23:34,569] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2024-06-27 22:23:35,662] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-06-27 22:23:37,239] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-06-27 22:23:37,302] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2024-06-27 22:23:37,303] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-06-27 22:23:37,332] INFO [Controller id=2] Current list of topics in the cluster: HashSet(kafka-integration-spark, airflow-kafka-spark, movie-recommendation, meteoblue_topic, kafka-spark, __consumer_offsets) (kafka.controller.KafkaController)
[2024-06-27 22:23:37,346] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-06-27 22:23:37,500] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-06-27 22:23:37,516] INFO [Controller id=2] List of topics ineligible for deletion: kafka-integration-spark,airflow-kafka-spark,movie-recommendation,meteoblue_topic,kafka-spark,__consumer_offsets (kafka.controller.KafkaController)
[2024-06-27 22:23:37,527] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-06-27 22:23:37,547] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(kafka-integration-spark, airflow-kafka-spark, movie-recommendation, meteoblue_topic, kafka-spark, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2024-06-27 22:23:37,585] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2024-06-27 22:23:38,528] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-06-27 22:23:38,581] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-06-27 22:23:38,615] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-06-27 22:23:40,519] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-06-27 22:23:41,654] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=20,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=3] -> OfflineReplica, [Topic=movie-recommendation,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=movie-recommendation,Partition=2,Replica=2] -> OnlineReplica, [Topic=movie-recommendation,Partition=0,Replica=2] -> OnlineReplica, [Topic=kafka-spark,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OfflineReplica, [Topic=movie-recommendation,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=kafka-integration-spark,Partition=1,Replica=1] -> OfflineReplica, [Topic=meteoblue_topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=3] -> OfflineReplica, [Topic=movie-recommendation,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=kafka-integration-spark,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=kafka-spark,Partition=2,Replica=1] -> OfflineReplica, [Topic=movie-recommendation,Partition=1,Replica=3] -> OfflineReplica, [Topic=airflow-kafka-spark,Partition=1,Replica=2] -> OnlineReplica, [Topic=airflow-kafka-spark,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=3] -> OfflineReplica, [Topic=kafka-integration-spark,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OfflineReplica, [Topic=airflow-kafka-spark,Partition=1,Replica=1] -> OfflineReplica, [Topic=airflow-kafka-spark,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=kafka-spark,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=airflow-kafka-spark,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=airflow-kafka-spark,Partition=0,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-06-27 22:23:41,662] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-06-27 22:23:41,683] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-06-27 22:23:42,267] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, airflow-kafka-spark-0 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, kafka-spark-1 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, kafka-integration-spark-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, meteoblue_topic-0 -> OfflinePartition, kafka-spark-2 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, kafka-integration-spark-1 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, movie-recommendation-0 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, airflow-kafka-spark-2 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, kafka-integration-spark-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, movie-recommendation-1 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, airflow-kafka-spark-1 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, kafka-spark-0 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, movie-recommendation-2 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-06-27 22:23:42,278] INFO [Controller id=2] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2024-06-27 22:23:42,374] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-06-27 22:23:42,381] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-06-27 22:23:42,386] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-06-27 22:23:42,392] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-06-27 22:23:42,414] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-06-27 22:23:42,530] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-06-27 22:23:42,679] INFO [Controller id=2] Newly added brokers: 1,3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2024-06-27 22:23:42,701] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-06-27 22:23:42,749] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-06-27 22:23:42,755] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2024-06-27 22:23:42,849] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-06-27 22:23:42,873] INFO [Controller id=2] New broker startup callback for 1,3 (kafka.controller.KafkaController)
[2024-06-27 22:23:42,892] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-06-27 22:23:42,898] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-06-27 22:23:43,445] DEBUG [Controller id=2] Register BrokerModifications handler for List(1, 3) (kafka.controller.KafkaController)
[2024-06-27 22:23:43,467] INFO [Controller id=2] Updated broker epochs cache: HashMap(1 -> 788, 2 -> 785, 3 -> 790) (kafka.controller.KafkaController)
[2024-06-27 22:23:44,857] DEBUG [Controller id=2] Updating ISRs for partitions: Set(movie-recommendation-2). (kafka.controller.KafkaController)
[2024-06-27 22:23:44,902] DEBUG [Controller id=2] ISR for partition movie-recommendation-2 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-06-27 22:23:45,142] DEBUG [Controller id=2] Updating ISRs for partitions: Set(airflow-kafka-spark-1, airflow-kafka-spark-2, movie-recommendation-0). (kafka.controller.KafkaController)
[2024-06-27 22:23:45,183] DEBUG [Controller id=2] ISR for partition airflow-kafka-spark-1 updated to LeaderAndIsr(leader=2, leaderEpoch=11, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=17). (kafka.controller.KafkaController)
[2024-06-27 22:23:45,183] DEBUG [Controller id=2] ISR for partition airflow-kafka-spark-2 updated to LeaderAndIsr(leader=2, leaderEpoch=11, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=16). (kafka.controller.KafkaController)
[2024-06-27 22:23:45,183] DEBUG [Controller id=2] ISR for partition movie-recommendation-0 updated to LeaderAndIsr(leader=2, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=3). (kafka.controller.KafkaController)
[2024-06-27 22:23:47,339] DEBUG [Controller id=2] Updating ISRs for partitions: Set(airflow-kafka-spark-0). (kafka.controller.KafkaController)
[2024-06-27 22:23:47,356] DEBUG [Controller id=2] ISR for partition airflow-kafka-spark-0 updated to LeaderAndIsr(leader=3, leaderEpoch=12, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=17). (kafka.controller.KafkaController)
[2024-06-27 22:23:47,407] DEBUG [Controller id=2] Updating ISRs for partitions: Set(movie-recommendation-1). (kafka.controller.KafkaController)
[2024-06-27 22:23:47,430] DEBUG [Controller id=2] ISR for partition movie-recommendation-1 updated to LeaderAndIsr(leader=3, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=4). (kafka.controller.KafkaController)
[2024-06-27 22:23:47,559] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-06-27 22:23:47,563] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-06-27 22:23:47,584] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2), movie-recommendation-1 -> List(1, 3)) (kafka.controller.KafkaController)
[2024-06-27 22:23:47,612] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.09090909090909091 (kafka.controller.KafkaController)
[2024-06-27 22:23:47,614] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-06-27 22:23:47,614] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-06-27 22:23:47,614] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(movie-recommendation-0 -> List(3, 2)) (kafka.controller.KafkaController)
[2024-06-27 22:23:47,614] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.05 (kafka.controller.KafkaController)
