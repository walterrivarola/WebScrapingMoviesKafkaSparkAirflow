[2024-07-02 09:15:12,680] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:15:12,698] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:15:12,698] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:15:12,699] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:15:12,699] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:15:12,699] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:15:12,699] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:15:12,699] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:20:12,699] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:20:12,699] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:20:12,700] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:20:12,700] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:20:12,700] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:20:12,700] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:20:12,700] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:20:12,700] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:23:10,075] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:23:10,076] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-02 09:23:10,077] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,077] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,087] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:23:10,087] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:23:10,092] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:23:10,322] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:23:10,323] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,324] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,331] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:23:10,332] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,332] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,341] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:23:10,341] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,342] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,492] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:10,495] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 09:23:10,501] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:23:23,834] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(MmMWyrtYTJSFDgx5nNgXlQ),Map(movie-urls-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 09:23:23,834] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-02 09:23:55,216] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:23:55,216] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-02 09:23:55,216] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,216] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,391] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:23:55,391] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,396] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,396] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:23:55,400] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,401] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,407] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:23:55,408] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,408] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,518] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 09:23:55,521] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 09:23:55,523] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:24:05,550] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(eK8CC6_9SGqHGFiYWCmLvw),Map(movie-details-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 09:24:05,550] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-02 09:25:12,701] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:25:12,701] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:25:12,703] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:25:12,703] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:25:12,707] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:25:12,707] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:25:12,707] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:25:12,707] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:30:12,711] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:30:12,711] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:30:12,712] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:30:12,712] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:30:12,712] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:30:12,712] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:30:12,712] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:30:12,712] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:35:12,716] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:35:12,717] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:35:12,717] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:35:12,717] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:35:12,717] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:35:12,717] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:35:12,717] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:35:12,717] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:36:39,527] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:36:39,527] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-02 09:36:39,527] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,527] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,528] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:36:39,528] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:36:39,528] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:36:39,667] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:36:39,667] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,667] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,672] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:36:39,672] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,672] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,673] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:36:39,673] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,673] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,778] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 09:36:39,786] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 09:36:39,796] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:36:47,900] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(4Ryr6N9jSO6VrBYhGPm1gQ),Map(movie-urls-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 09:36:47,900] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-02 09:37:07,377] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:37:07,377] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-02 09:37:07,377] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,377] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,611] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:37:07,611] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,612] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,614] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:37:07,614] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,615] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,615] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:37:07,615] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,616] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,669] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 09:37:07,671] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 09:37:07,673] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:37:16,222] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(J3VuuvKqREqO-orZ5JcxZw),Map(movie-details-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 09:37:16,222] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-02 09:40:12,728] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:40:12,728] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:40:12,730] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:40:12,730] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:40:12,730] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:40:12,730] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:40:12,730] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:40:12,730] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:45:12,730] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:45:12,730] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:45:12,731] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:45:12,731] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:45:12,731] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:45:12,731] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:45:12,731] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:45:12,731] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:50:12,731] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:50:12,731] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:50:12,732] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:50:12,732] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:50:12,732] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:50:12,732] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:50:12,732] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:50:12,732] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:51:59,974] DEBUG [Controller id=2] Delete topics listener fired for topics movie-urls to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:51:59,974] INFO [Controller id=2] Starting topic deletion for topics movie-urls (kafka.controller.KafkaController)
[2024-07-02 09:51:59,974] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:51:59,974] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 09:51:59,980] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:51:59,981] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:51:59,981] INFO [RequestSendThread controllerId=2] Controller 2 connected to walter-VirtualBox:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-07-02 09:52:00,129] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-urls-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:52:00,130] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:00,130] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:00,130] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-urls-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:52:00,130] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:00,130] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:00,131] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-urls-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:52:00,131] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-urls,Partition=2,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:00,131] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-urls (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:00,181] INFO [Topic Deletion Manager 2] Deletion of topic movie-urls successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:00,184] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 09:52:00,189] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:52:36,096] INFO [Controller id=2] New topics: [HashSet(movie-urls)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-urls,Some(v3v4_YK8T7O14yAldyoqhg),Map(movie-urls-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-urls-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), movie-urls-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 09:52:36,096] INFO [Controller id=2] New partition creation callback for movie-urls-0,movie-urls-1,movie-urls-2 (kafka.controller.KafkaController)
[2024-07-02 09:52:57,276] DEBUG [Controller id=2] Delete topics listener fired for topics movie-details to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:52:57,276] INFO [Controller id=2] Starting topic deletion for topics movie-details (kafka.controller.KafkaController)
[2024-07-02 09:52:57,277] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,277] INFO [Topic Deletion Manager 2] Deletion of topic movie-details (re)started (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,396] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(movie-details-1 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:52:57,396] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=1,Replica=3] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,398] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,399] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(movie-details-2 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:52:57,399] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=2,Replica=1] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,399] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,404] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(movie-details-0 -> NONE) (kafka.controller.KafkaController)
[2024-07-02 09:52:57,404] DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=movie-details,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,404] INFO [Topic Deletion Manager 2] Handling deletion for topics movie-details (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,456] INFO [Topic Deletion Manager 2] Deletion of topic movie-details successfully completed (kafka.controller.TopicDeletionManager)
[2024-07-02 09:52:57,459] INFO [Controller id=2] New topics: [HashSet()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-07-02 09:52:57,470] DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-07-02 09:53:02,624] INFO [Controller id=2] New topics: [HashSet(movie-details)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(movie-details,Some(k_7q5yrMSC2dgBYwRXiWzw),Map(movie-details-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), movie-details-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), movie-details-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-07-02 09:53:02,624] INFO [Controller id=2] New partition creation callback for movie-details-0,movie-details-1,movie-details-2 (kafka.controller.KafkaController)
[2024-07-02 09:55:12,732] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-07-02 09:55:12,732] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-07-02 09:55:12,733] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(airflow-kafka-spark-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2024-07-02 09:55:12,733] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.043478260869565216 (kafka.controller.KafkaController)
[2024-07-02 09:55:12,733] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:55:12,733] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-07-02 09:55:12,733] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2024-07-02 09:55:12,733] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
